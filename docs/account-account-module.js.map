{"version":3,"sources":["./src/app/account/layout/layout.component.ts","./src/app/account/layout/layout.component.html","./src/app/account/register/register.component.ts","./src/app/account/register/register.component.html","./src/app/account/login/login.component.ts","./src/app/account/login/login.component.html","./src/app/account/account.module.ts","./src/app/account/account-routing.module.ts"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AccountService } from '../../_services/account.service';\r\n\r\n@Component({ \r\n  templateUrl: 'layout.component.html',\r\n  styleUrls: ['layout.component.scss']\r\n})\r\nexport class LayoutComponent {\r\n    constructor(\r\n        private router: Router,\r\n        private accountService: AccountService\r\n    ) {\r\n        // redirect to home if already logged in\r\n        if (this.accountService.userValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n    }\r\n}","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '../../_services/account.service';\r\nimport { AlertService } from '../../_services/alert.service';\r\n\r\n@Component({ templateUrl: 'register.component.html' })\r\nexport class RegisterComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            firstname: ['', Validators.required],\r\n            lastname: ['', Validators.required],\r\n            username: ['', Validators.required],\r\n            password: ['', [Validators.required, Validators.minLength(6)]]\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    async onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        var user = await this.accountService.register(this.form.value).catch((error) => {\r\n            this.alertService.error(error);\r\n            this.loading = false;\r\n        });\r\n\r\n        if(user) {\r\n            this.alertService.success('Registration successful', { keepAfterRouteChange: true });\r\n            this.router.navigate(['../login'], { relativeTo: this.route });\r\n        }\r\n\r\n    }\r\n}","<div class=\"card\">\r\n    <h4 class=\"card-header\">Register</h4>\r\n    <div class=\"card-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"firstname\">First Name</label>\r\n                <input type=\"text\" formControlName=\"firstname\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstname.errors }\" />\r\n                <div *ngIf=\"submitted && f.firstname.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.firstname.errors.required\">First Name is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"lastname\">Last Name</label>\r\n                <input type=\"text\" formControlName=\"lastname\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastname.errors }\" />\r\n                <div *ngIf=\"submitted && f.lastname.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.lastname.errors.required\">Last Name is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Register\r\n                </button>\r\n                <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '../../_services/account.service';\r\nimport { AlertService } from '../../_services/alert.service';\r\nimport { FamilyService } from 'src/app/_services/family.service';\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class LoginComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    returnUrl: string;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService,\r\n        private familyService: FamilyService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n\r\n        // get return url from route parameters or default to '/'\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n        console.log(this.returnUrl);\r\n        \r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    async onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        var user = await this.accountService.login(this.f.username.value, this.f.password.value).catch((err) => {\r\n            this.alertService.error(err);\r\n            console.error(err);\r\n            this.submitted = false;\r\n            this.loading = false;\r\n        })\r\n        \r\n        if(user) {\r\n            this.familyService.loadFamily();\r\n            this.router.navigate([this.returnUrl]);\r\n        }\r\n    }\r\n    \r\n}","<div class=\"card\">\r\n    <h4 class=\"card-header\">Login</h4>\r\n    <div class=\"card-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Login\r\n                </button>\r\n                <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        AccountRoutingModule\r\n    ],\r\n    declarations: [\r\n        LayoutComponent,\r\n        LoginComponent,\r\n        RegisterComponent\r\n    ]\r\n})\r\nexport class AccountModule { }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LayoutComponent,\r\n        children: [\r\n            { path: 'login', component: LoginComponent },\r\n            { path: 'register', component: RegisterComponent }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }"],"sourceRoot":"webpack:///"}